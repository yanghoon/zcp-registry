{{ if .Values.notary.enabled }}
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "harbor.fullname" . }}-notary-db
  labels:
{{ include "harbor.labels" . | indent 4 }}
    component: notary-db
spec:
  replicas: 1
  serviceName: "{{ template "harbor.fullname" . }}-notary-db"
  selector:
    matchLabels:
{{ include "harbor.matchLabels" . | indent 6 }}
      component: notary-db
  template:
    metadata:
      labels:
{{ include "harbor.labels" . | indent 8 }}
        component: notary-db
    spec:
      initContainers: 
      - name: move-init-scripts
        image: alpine:3.6
        imagePullPolicy: IfNotPresent
        command: [
          "sh",
          "-ce",
          "ls -l /configmap/docker-entrypoint-initdb.d/* &&
           cp -L /configmap/docker-entrypoint-initdb.d/* /docker-entrypoint-initdb.d/"
        ]
        volumeMounts:
        - name: notary-db-config
          mountPath: /configmap/docker-entrypoint-initdb.d
        - name: notary-db-init
          mountPath: /docker-entrypoint-initdb.d
      containers:
      - name: notary-db
        image: {{ .Values.notary.db.image.repository }}:{{ .Values.notary.db.image.tag }}
        imagePullPolicy: {{ .Values.notary.db.image.pullPolicy }}
        args: ["--innodb_file_per_table"]
        env:
          - name: TERM
            value: "dumb"
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: "true"
        resources:
{{ toYaml .Values.notary.db.resources | indent 10 }}
        volumeMounts:
        - name: notary-db-config
          mountPath: /configmap/docker-entrypoint-initdb.d
        - name: notary-db-init
          mountPath: /docker-entrypoint-initdb.d
        - name: notary-db-data
          mountPath: /var/lib/mysql
      volumes:
      - name: notary-db-config
        configMap:
          name: "{{ template "harbor.fullname" . }}-notary-db"
      - name: notary-db-init
        emptyDir: {}
      {{- if not .Values.persistence.enabled }}
      - name: notary-db-data
        emptyDir: {}
      {{- end -}}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: notary-db-data
    spec:
      accessModes: [{{ .Values.notary.db.volumes.data.accessMode | quote }}]
      {{- if .Values.notary.db.volumes.data.storageClass }}
      {{- if (eq "-" .Values.notary.db.volumes.data.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.notary.db.volumes.data.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.notary.db.volumes.data.size | quote }}
  {{- end -}}
{{ end }}
